import subprocess
import platform
import re
import requests
import sys
from ipaddress import ip_network
from concurrent.futures import ThreadPoolExecutor

def print_logo():
    green = "\033[92m"
    blue = "\033[94m"
    reset = "\033[0m"

    ascii_lines = [
        "+--------------------------------------------------------------------------------+",
        "|                                                                                |",
        "|                                                                                |",
        "|                                    ..  .:.                                     |",
        "|                                  ':   .oNMK;                                   |",
        "|                                 ,c    .dMMMMd                                  |",
        "|                                .d  .,:lkKNWMMo                                 |",
        "|                                dKo;,'....'cOMM;                                |",
        "|                              .kd.           .lNo                               |",
        "|                              x0               l0                               |",
        "|                              .kk.            cK,.                              |",
        "|                            d0lkNN:         'KOONWNk.                           |",
        "|                          .k0   . ::       .:  . :dkK.                          |",
        "|                         oO..                    .  oK..                        |",
        "|                       cNc    .......''''''''',,,,.  kKK.                       |",
        "|                     .lWd;   ,x,,,'''''..........l,    cNO.                     |",
        "|                   .OMMK;    .l                  :.    'kMl                     |",
        "|                   c,',cldo,. :       ,dd,       ; ..:cON0lc,                   |",
        "|                              ,       ,dd'       '   ..,;,.                     |",
        "|                              .                  .                              |",
        "|                                                                                |",
        "|                                                                                |",
        "|                                                                                |",
        "|                                                                                |",
        "+--------------------------------------------------------------------------------+"
    ]

    for line in ascii_lines:
        if line.startswith("|") and line.endswith("|"):
            # Add blue color to content inside the borders only
            print(f"|{blue}{line[1:-1]}{reset}|")
        else:
            print(line)


def ping_ip(ip):
    param = "-n" if platform.system().lower() == "windows" else "-c"
    command = ["ping", param, "1", str(ip)]
    try:
        result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.DEVNULL, text=True)
        return ip if "TTL=" in result.stdout or "ttl=" in result.stdout else None
    except:
        return None

def get_mac(ip):
    try:
        if platform.system().lower() == "windows":
            output = subprocess.check_output(["arp", "-a"], text=True)
        else:
            output = subprocess.check_output(["arp", "-n", str(ip)], text=True)

        pattern = rf"{ip}\s+([0-9A-Fa-f\-:]{{17}})"
        match = re.search(pattern, output)
        return match.group(1) if match else "Unknown"
    except:
        return "Unknown"

def get_vendor(mac):
    try:
        if mac == "Unknown":
            return "Unknown"
        response = requests.get(f"https://api.macvendors.com/{mac}", timeout=3)
        return response.text if response.status_code == 200 else "Unknown"
    except:
        return "Unknown"

def scan_subnet(subnet):
    print(f"\nScanning subnet {subnet}.0/24...\n")
    ip_list = list(ip_network(subnet + ".0/24").hosts())
    active_devices = []

    with ThreadPoolExecutor(max_workers=100) as executor:
        results = list(executor.map(ping_ip, ip_list))

    for ip in filter(None, results):
        ip_str = str(ip)
        mac = get_mac(ip_str)
        vendor = get_vendor(mac)
        active_devices.append((ip_str, mac, vendor))
        print(f"[+] {ip_str} - MAC: {mac} - Vendor: {vendor}")

    print(f"\nScan complete. Found {len(active_devices)} active devices.")

if __name__ == "__main__":
    print_logo()
    if len(sys.argv) < 2:
        print("Usage: curl -s https://5cript5.vercel.app/py-0-24.txt | python - <ip address>")
        print("Example: curl -s https://5cript5.vercel.app/py-0-24.txt | python - 192.168.29")
        sys.exit(1)

    subnet_input = sys.argv[1]
    scan_subnet(subnet_input)

